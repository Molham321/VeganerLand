-- MySQL Script generated by MySQL Workbench
-- Sun Jan 24 10:47:51 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema veganerland
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema veganerland
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `veganerland` DEFAULT CHARACTER SET utf8 ;
USE `veganerland` ;

-- -----------------------------------------------------
-- Table `veganerland`.`category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `veganerland`.`category` (
  `catId` INT NOT NULL AUTO_INCREMENT,
  `descrip` VARCHAR(30) NOT NULL,
  `name` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`catId`));


-- -----------------------------------------------------
-- Table `veganerland`.`products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `veganerland`.`products` (
  `prodId` INT NOT NULL AUTO_INCREMENT,
  `descrip` VARCHAR(50) NOT NULL,
  `stdPrice` DECIMAL(5,2) NOT NULL,
  `catId` INT NOT NULL,
  `comment` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`prodId`),
  UNIQUE INDEX `PRODID_UNIQUE` (`prodId` ASC),
  INDEX `fk_products_category1_idx` (`catId` ASC),
  CONSTRAINT `fk_products_category1`
    FOREIGN KEY (`catId`)
    REFERENCES `veganerland`.`category` (`catId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `veganerland`.`address`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `veganerland`.`address` (
  `addressId` INT NOT NULL AUTO_INCREMENT,
  `street` VARCHAR(45) NOT NULL,
  `number` VARCHAR(45) NOT NULL,
  `zip` VARCHAR(5) NOT NULL,
  `city` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`addressId`));


-- -----------------------------------------------------
-- Table `veganerland`.`customers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `veganerland`.`customers` (
  `custId` INT NOT NULL AUTO_INCREMENT,
  `firstName` VARCHAR(45) NOT NULL,
  `lastName` VARCHAR(45) NOT NULL,
  `email` VARCHAR(150) NOT NULL,
  `tocken` VARCHAR(50) NULL,
  `phone` VARCHAR(20) NULL,
  `gender` VARCHAR(1) NULL,
  `password` VARCHAR(50) NOT NULL,
  `addressId` INT NULL,
  PRIMARY KEY (`custId`),
  UNIQUE INDEX `CUSTID_UNIQUE` (`custId` ASC),
  UNIQUE INDEX `EMAIL_UNIQUE` (`email` ASC),
  INDEX `fk_CUSTOMER_address1_idx` (`addressId` ASC),
  CONSTRAINT `fk_CUSTOMER_address1`
    FOREIGN KEY (`addressId`)
    REFERENCES `veganerland`.`address` (`addressId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `veganerland`.`orderitems`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `veganerland`.`orderitems` (
  `itemId` INT NOT NULL AUTO_INCREMENT,
  `custId` INT NOT NULL,
  `prodId` INT NOT NULL,
  `qyt` INT NOT NULL,
  `isSend` ENUM('f', 't') NOT NULL DEFAULT 'f',
  PRIMARY KEY (`itemId`),
  UNIQUE INDEX `ITEMID_UNIQUE` (`itemId` ASC),
  INDEX `fk_ORDERITEMS_PRODUCTS_idx` (`prodId` ASC),
  INDEX `fk_orderitems_customers1_idx` (`custId` ASC),
  CONSTRAINT `fk_ORDERITEMS_PRODUCTS`
    FOREIGN KEY (`prodId`)
    REFERENCES `veganerland`.`products` (`prodId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orderitems_customers1`
    FOREIGN KEY (`custId`)
    REFERENCES `veganerland`.`customers` (`custId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `veganerland`.`orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `veganerland`.`orders` (
  `orderId` INT NOT NULL AUTO_INCREMENT,
  `itemId` INT NOT NULL,
  `orderDate` DATETIME NOT NULL DEFAULT current_timestamp(),
  `shipDate` DATETIME NULL,
  `addressId` INT NOT NULL,
  PRIMARY KEY (`orderId`),
  UNIQUE INDEX `ORDERID_UNIQUE` (`orderId` ASC),
  INDEX `fk_ORDERS_ORDERITEMS1_idx` (`itemId` ASC),
  INDEX `fk_ORDERS_address1_idx` (`addressId` ASC),
  CONSTRAINT `fk_ORDERS_ORDERITEMS1`
    FOREIGN KEY (`itemId`)
    REFERENCES `veganerland`.`orderitems` (`itemId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ORDERS_address1`
    FOREIGN KEY (`addressId`)
    REFERENCES `veganerland`.`address` (`addressId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `veganerland`.`favorits`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `veganerland`.`favorits` (
  `prodId` INT NOT NULL,
  `custId` INT NOT NULL,
  INDEX `fk_favoriten_products1_idx` (`prodId` ASC),
  INDEX `fk_favorits_customers1_idx` (`custId` ASC),
  CONSTRAINT `fk_favoriten_products1`
    FOREIGN KEY (`prodId`)
    REFERENCES `veganerland`.`products` (`prodId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_favorits_customers1`
    FOREIGN KEY (`custId`)
    REFERENCES `veganerland`.`customers` (`custId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
